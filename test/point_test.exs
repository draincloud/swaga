defmodule PointTest do
  use ExUnit.Case
  doctest Point

  test "creates infinity" do
    prime = 22
    a = FieldElement.new(5, prime)
    b = FieldElement.new(7, prime)

    assert Point.new(nil, nil, a, b) ==
             %Point{x: nil, y: nil, a: a, b: b}
  end

  #  test "For the curve y^2 = x^3 + 7 over F~223~,
  #  find the order of the group generated by (15,86)" do
  #    prime = 223
  #    a = FieldElement.new(0, prime)
  #    b = FieldElement.new(7, prime)
  #    x1 = FieldElement.new(15, prime)
  #    y1 = FieldElement.new(86, prime)
  #    p = Point.new(x1, y1, a, b)
  #    inf = Point.new(nil, nil, a, b)
  #    product = p
  #    count = 1
  #    p = Point.do_order(p, inf,1)
  #    assert p == Point.mul(p, 7)
  #  end

  #  test "secp256k1" do
  #    gx = 0x79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798
  #    gy = 0x483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8
  #    p = 2**256 - 2**32 - 977
  #    n = 0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141
  #    x = FieldElement(gx, p)
  #  end

  #  test "should add correctly when y = 0, slope is vertical" do
  #    p1 = Point.new(-1, -1, 5, 7)
  #    p2 = Point.new(-1, -1, 5, 7)
  #    assert Point.add(p1, p2) == %Point{x: nil, y: nil, a: 5, b: 7}
  #  end
end
